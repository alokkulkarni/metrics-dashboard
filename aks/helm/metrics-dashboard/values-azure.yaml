# Azure AKS-specific values
global:
  cloudProvider: "azure"
  imageRegistry: "youracr.azurecr.io"

# Use ACR images
app:
  frontend:
    image:
      repository: metrics-dashboard-frontend
      tag: latest
      pullPolicy: Always
  backend:
    image:
      repository: metrics-dashboard-backend
      tag: latest
      pullPolicy: Always

# Use external Azure Database for PostgreSQL
database:
  embedded:
    enabled: false
  external:
    enabled: true
    host: "metrics-dashboard.postgres.database.azure.com"
    port: 5432
    database: "metrics_dashboard"
    username: "postgres@metrics-dashboard"

# Application Gateway Ingress configuration
ingress:
  enabled: true
  className: "azure/application-gateway"
  annotations:
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/ssl-certificate: "metrics-dashboard-cert"
    appgw.ingress.kubernetes.io/backend-protocol: "http"
  hosts:
    - host: metrics-dashboard.yourdomain.com
      paths:
        - path: /
          pathType: Prefix

# Production resources - override app settings
replicaCount: 2
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# Enable autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

# Use Azure Key Vault for secrets
secrets:
  # These will be injected via Azure Key Vault CSI driver
  dbPassword: ""  # Retrieved from Azure Key Vault
  jira:
    apiToken: ""  # Retrieved from Azure Key Vault
    email: ""     # Retrieved from Azure Key Vault
    baseUrl: ""   # Retrieved from Azure Key Vault

# Service account with Workload Identity
serviceAccount:
  create: true
  annotations:
    azure.workload.identity/client-id: "00000000-0000-0000-0000-000000000000"

# Use Azure Disk storage class
persistence:
  logs:
    enabled: true
    size: 10Gi
    storageClass: "managed-premium"

# Production environment
env:
  NODE_ENV: "production"
  DB_HOST: ""  # Will be set from external database config

# Node selector for specific VM types
nodeSelector:
  agentpool: "default"

# Pod disruption budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Azure-specific pod annotations
podAnnotations:
  azure.workload.identity/use: "true"
