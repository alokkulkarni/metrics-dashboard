apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metrics-dashboard-ingress
  namespace: metrics-dashboard
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: ingress
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # CORS configuration
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://metrics-dashboard.example.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: http01
    
    # Azure Application Gateway annotations (alternative to NGINX)
    # kubernetes.io/ingress.class: azure/application-gateway
    # appgw.ingress.kubernetes.io/ssl-redirect: "true"
    # appgw.ingress.kubernetes.io/request-timeout: "300"
    # appgw.ingress.kubernetes.io/connection-draining: "true"
    # appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
spec:
  tls:
  - hosts:
    - metrics-dashboard.example.com
    - api.metrics-dashboard.example.com
    secretName: metrics-dashboard-tls
  rules:
  - host: metrics-dashboard.example.com
    http:
      paths:
      # Frontend routes
      - path: /
        pathType: Prefix
        backend:
          service:
            name: metrics-dashboard-service
            port:
              number: 80
      # API routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: metrics-dashboard-service
            port:
              number: 3001
      # Health check endpoint
      - path: /health
        pathType: Exact
        backend:
          service:
            name: metrics-dashboard-service
            port:
              number: 80
  
  # Separate API subdomain (optional)
  - host: api.metrics-dashboard.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: metrics-dashboard-service
            port:
              number: 3001

---
# Alternative: Azure Application Gateway Ingress (AGIC)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metrics-dashboard-agic
  namespace: metrics-dashboard
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: ingress-agic
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/request-timeout: "300"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
    appgw.ingress.kubernetes.io/cookie-based-affinity: "Enabled"
    appgw.ingress.kubernetes.io/backend-protocol: "http"
    appgw.ingress.kubernetes.io/health-probe-path: "/health"
    appgw.ingress.kubernetes.io/health-probe-status-codes: "200-399"
spec:
  tls:
  - hosts:
    - metrics-dashboard.example.com
    secretName: metrics-dashboard-agic-tls
  rules:
  - host: metrics-dashboard.example.com
    http:
      paths:
      - path: /api/*
        pathType: Prefix
        backend:
          service:
            name: metrics-dashboard-service
            port:
              number: 3001
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: metrics-dashboard-service
            port:
              number: 80
