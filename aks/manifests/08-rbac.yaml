apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: metrics-dashboard-role
  namespace: metrics-dashboard
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: rbac
rules:
# Allow reading ConfigMaps and Secrets
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
# Allow reading Services and Endpoints for service discovery
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
# Allow reading Pods for debugging
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
# Allow access to PersistentVolumeClaims
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: metrics-dashboard-rolebinding
  namespace: metrics-dashboard
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: metrics-dashboard-sa
  namespace: metrics-dashboard
roleRef:
  kind: Role
  name: metrics-dashboard-role
  apiGroup: rbac.authorization.k8s.io

---
# Cluster-level permissions (if needed for cross-namespace access)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-dashboard-cluster-role
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: rbac
rules:
# Allow reading cluster-level resources for monitoring
- apiGroups: [""]
  resources: ["nodes", "namespaces"]
  verbs: ["get", "list", "watch"]
# Allow reading custom metrics
- apiGroups: ["metrics.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-dashboard-cluster-rolebinding
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: metrics-dashboard-sa
  namespace: metrics-dashboard
roleRef:
  kind: ClusterRole
  name: metrics-dashboard-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
# Pod Security Policy (deprecated in favor of Pod Security Standards)
# Keeping for reference - use Pod Security Standards instead
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: metrics-dashboard-psp
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: security
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  allowedCapabilities:
    - NET_BIND_SERVICE
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
    - 'csi'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true
  seLinux:
    rule: 'RunAsAny'
