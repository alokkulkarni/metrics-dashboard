apiVersion: v1
kind: ServiceMonitor
metadata:
  name: metrics-dashboard-monitor
  namespace: metrics-dashboard
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: monitoring
spec:
  selector:
    matchLabels:
      app: metrics-dashboard
  endpoints:
  - port: api
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
    - metrics-dashboard

---
# Prometheus Rule for alerting
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: metrics-dashboard-alerts
  namespace: metrics-dashboard
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: monitoring
spec:
  groups:
  - name: metrics-dashboard.rules
    rules:
    # High CPU usage
    - alert: MetricsDashboardHighCPU
      expr: |
        (
          sum by (pod) (rate(container_cpu_usage_seconds_total{namespace="metrics-dashboard", container!=""}[5m])) /
          sum by (pod) (container_spec_cpu_quota{namespace="metrics-dashboard", container!=""} / container_spec_cpu_period{namespace="metrics-dashboard", container!=""})
        ) * 100 > 80
      for: 5m
      labels:
        severity: warning
        component: metrics-dashboard
      annotations:
        summary: "High CPU usage in Metrics Dashboard pod"
        description: "Pod {{ $labels.pod }} CPU usage is above 80% for more than 5 minutes"
    
    # High memory usage
    - alert: MetricsDashboardHighMemory
      expr: |
        (
          container_memory_working_set_bytes{namespace="metrics-dashboard", container!=""} /
          container_spec_memory_limit_bytes{namespace="metrics-dashboard", container!=""} * 100
        ) > 85
      for: 5m
      labels:
        severity: warning
        component: metrics-dashboard
      annotations:
        summary: "High memory usage in Metrics Dashboard pod"
        description: "Pod {{ $labels.pod }} memory usage is above 85% for more than 5 minutes"
    
    # Pod restart rate
    - alert: MetricsDashboardPodRestarting
      expr: |
        increase(kube_pod_container_status_restarts_total{namespace="metrics-dashboard"}[1h]) > 3
      for: 0m
      labels:
        severity: warning
        component: metrics-dashboard
      annotations:
        summary: "Metrics Dashboard pod is restarting frequently"
        description: "Pod {{ $labels.pod }} has restarted more than 3 times in the last hour"
    
    # API response time
    - alert: MetricsDashboardHighResponseTime
      expr: |
        histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{namespace="metrics-dashboard"}[5m])) by (le)) > 2
      for: 5m
      labels:
        severity: warning
        component: metrics-dashboard
      annotations:
        summary: "High API response time in Metrics Dashboard"
        description: "95th percentile response time is above 2 seconds for more than 5 minutes"
    
    # Database connection errors
    - alert: MetricsDashboardDatabaseErrors
      expr: |
        increase(database_connection_errors_total{namespace="metrics-dashboard"}[5m]) > 10
      for: 2m
      labels:
        severity: critical
        component: metrics-dashboard
      annotations:
        summary: "Database connection errors in Metrics Dashboard"
        description: "More than 10 database connection errors in the last 5 minutes"

---
# Grafana Dashboard ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-dashboard-grafana
  namespace: metrics-dashboard
  labels:
    app.kubernetes.io/name: metrics-dashboard
    app.kubernetes.io/component: monitoring
    grafana_dashboard: "1"
data:
  dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Metrics Dashboard Application",
        "tags": ["metrics-dashboard", "kubernetes"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Pod CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "sum by (pod) (rate(container_cpu_usage_seconds_total{namespace=\"metrics-dashboard\", container!=\"\"}[5m])) * 100",
                "legendFormat": "{{ pod }}"
              }
            ],
            "yAxes": [
              {
                "label": "CPU %",
                "max": 100,
                "min": 0
              }
            ]
          },
          {
            "id": 2,
            "title": "Pod Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "sum by (pod) (container_memory_working_set_bytes{namespace=\"metrics-dashboard\", container!=\"\"}) / 1024 / 1024",
                "legendFormat": "{{ pod }}"
              }
            ],
            "yAxes": [
              {
                "label": "Memory (MB)",
                "min": 0
              }
            ]
          },
          {
            "id": 3,
            "title": "HTTP Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{namespace=\"metrics-dashboard\"}[5m]))",
                "legendFormat": "Requests/sec"
              }
            ]
          },
          {
            "id": 4,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{namespace=\"metrics-dashboard\"}[5m])) by (le))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, sum(rate(http_request_duration_seconds_bucket{namespace=\"metrics-dashboard\"}[5m])) by (le))",
                "legendFormat": "50th percentile"
              }
            ]
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }
